openapi: 3.0.3
info:
  title: aunar_welfare API
  version: 1.0.0
  description: API Documentation
paths:
  /api/activities/activities/:
    get:
      operationId: activitiesActivitiesList
      tags:
      - activities
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/activities/{id}/:
    get:
      operationId: activitiesActivitiesRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Actividad.
        required: true
      tags:
      - activities
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/activities/{id}/add_student/:
    post:
      operationId: activitiesActivitiesAddStudentCreate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Actividad.
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/activities/{id}/add_student_participate/:
    post:
      operationId: activitiesActivitiesAddStudentParticipateCreate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Actividad.
        required: true
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
          description: ''
  /api/activities/activities/get_my_activities/:
    post:
      operationId: activitiesActivitiesGetMyActivitiesCreate
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/activities/get_my_activities_teacher/:
    post:
      operationId: activitiesActivitiesGetMyActivitiesTeacherCreate
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/activities/get_points/:
    post:
      operationId: activitiesActivitiesGetPointsCreate
      tags:
      - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityRegisterUserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
          description: ''
  /api/main/configurations/:
    get:
      operationId: mainConfigurationsList
      tags:
      - main
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration'
          description: ''
  /api/main/configurations/{id}/:
    get:
      operationId: mainConfigurationsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this configuration.
        required: true
      tags:
      - main
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
          description: ''
  /api/users/{id}/:
    delete:
      operationId: usersDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Usuario.
        required: true
      tags:
      - Usuario
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/account/{username}/:
    get:
      operationId: usersAccountRetrieve
      description: Obtiene la informaci칩n de un usuario mediante el nombre usuario
      summary: Obtiene la informaci칩n de un usuario mediante el nombre usuario
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - Usuario
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
        '404':
          description: El Usuario no existe
    post:
      operationId: usersAccountCreate
      description: Actualiza los datos del usuario, solo el usuario puede actualizar
        sus datos
      summary: Actualiza los datos del usuario, solo el usuario puede actualizar sus
        datos
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - Usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserModelRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
        '404':
          description: El Usuario no existe
        '400':
          description: Datos inv치lidos
        '401':
          description: Usted no tiene permiso para actualizar este usuario
    delete:
      operationId: usersAccountDestroy
      description: Elimina un usuario, solo el usuario se puede eliminar a si mismo
      summary: Elimina un usuario, solo el usuario se puede eliminar a si mismo
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - Usuario
      security:
      - jwtAuth: []
      responses:
        '201':
          description: Eliminaci칩n exitosa del usuario
        '404':
          description: El Usuario no existe
        '400':
          description: Usted no tiene permiso para eliminar este usuario
  /api/users/avatar/:
    post:
      operationId: usersAvatarCreate
      description: Anexar una imagen al avatar del usuario
      summary: Anexar una imagen al avatar de usuario
      tags:
      - Usuario
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
  /api/users/current/:
    get:
      operationId: usersCurrentRetrieve
      description: Obtiene el usuario actual atravez del token de la sesion
      summary: Obtiene el usuario actual atravez del token de la sesion
      tags:
      - Usuario
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
        '401':
          description: Usted no tiene permiso para ver este usuario
  /api/users/generate-code-recover-password/:
    post:
      operationId: usersGenerateCodeRecoverPasswordCreate
      description: Se genera un codigo de 6 digitos con el cual se puede restablecer
        la contrase침a
      summary: Generar codigo de seguridad para cambio de contrase침a
      tags:
      - Recover-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
          description: Correo enviado
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
          description: Lo campos no son correctos
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
          description: Usuario no encontrado
  /api/users/login/:
    post:
      operationId: usersLoginCreate
      description: Iniciar Sesi칩n
      summary: Iniciar sesion
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenOutput'
          description: ''
  /api/users/logout/:
    post:
      operationId: usersLogoutCreate
      description: Cerrar la sesi칩n
      summary: Cerrar la sesion
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: Cierre de sesi칩n exitoso
        '401':
          description: Usted no tiene permiso para ver este usuario
  /api/users/recover-password:
    post:
      operationId: usersRecoverPasswordCreate
      description: Se restablece la contrase침a con un codigo de 6 digitos
      summary: Cambio de contrase침a atravez de codigo de seguridad
      tags:
      - Recover-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /api/users/recover-password-link/:
    post:
      operationId: usersRecoverPasswordLinkCreate
      description: Se restablce la contrase침a desde el navegador atravez de un correo
      summary: Recuperar Contrase침a desde el navegador
      tags:
      - Recover-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
          description: Correo enviado
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
          description: Lo campos no son correctos
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
          description: Usuario no encontrado
  /api/users/refresh/:
    post:
      operationId: usersRefreshCreate
      description: Se generan nuevas credenciales de sesion con las credenciales anteriores
      summary: Generar un nuevas credenciales de sesion
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/upload-users/:
    post:
      operationId: usersUploadUsersCreate
      description: Anexar un archivo con excel con los usuarios de la base de datos
      summary: Anexar un archivo con excel con los usuarios de la base de datos
      tags:
      - Cargar estudiantes
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Excel:
                  type: string
                  format: binary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpload'
          description: ''
  /api/users/validate-code/:
    post:
      operationId: usersValidateCodeCreate
      description: Se validad el codigo de seguridad del usuario validando si es correcto
        y no a caducado
      summary: Validar Codigo de seguridad para restablecer contrase침a
      tags:
      - Recover-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeValidateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeValidateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeValidateRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordCodeValidateResponse'
          description: Codigo valido
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
          description: Codigo caducado
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
          description: Codigo no valido
  /documentation/schema/:
    get:
      operationId: documentationSchemaRetrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - en
          - es
      tags:
      - documentation
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Activity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 225
        description:
          type: string
        image:
          type: string
          format: uri
          nullable: true
        site:
          type: string
          maxLength: 225
        start_date:
          type: string
          format: date
        hour:
          $ref: '#/components/schemas/HourEnum'
        points:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        qr_code:
          type: string
          format: uri
          nullable: true
        teacher:
          type: integer
        students:
          type: array
          items:
            type: integer
        participants:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - description
      - hour
      - id
      - participants
      - points
      - site
      - start_date
      - students
      - teacher
      - title
    ActivityRegisterUserRequest:
      type: object
      properties:
        user_id:
          type: integer
      required:
      - user_id
    Configuration:
      type: object
      properties:
        key:
          type: string
          maxLength: 200
        value:
          type: string
          maxLength: 200
      required:
      - key
      - value
    CustomTokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    DefaultResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    FileUpload:
      type: object
      properties:
        Excel:
          type: string
          format: uri
      required:
      - Excel
    HourEnum:
      enum:
      - 07:00
      - 07:05
      - 07:10
      - 07:15
      - 07:20
      - 07:25
      - 07:30
      - 07:35
      - 07:40
      - 07:45
      - 07:50
      - 07:55
      - 08:00
      - 08:05
      - 08:10
      - 08:15
      - 08:20
      - 08:25
      - 08:30
      - 08:35
      - 08:40
      - 08:45
      - 08:50
      - 08:55
      - 09:00
      - 09:05
      - 09:10
      - 09:15
      - 09:20
      - 09:25
      - 09:30
      - 09:35
      - 09:40
      - 09:45
      - 09:50
      - 09:55
      - '10:00'
      - '10:05'
      - '10:10'
      - '10:15'
      - '10:20'
      - '10:25'
      - '10:30'
      - '10:35'
      - '10:40'
      - '10:45'
      - '10:50'
      - '10:55'
      - '11:00'
      - '11:05'
      - '11:10'
      - '11:15'
      - '11:20'
      - '11:25'
      - '11:30'
      - '11:35'
      - '11:40'
      - '11:45'
      - '11:50'
      - '11:55'
      - '12:00'
      - '12:05'
      - '12:10'
      - '12:15'
      - '12:20'
      - '12:25'
      - '12:30'
      - '12:35'
      - '12:40'
      - '12:45'
      - '12:50'
      - '12:55'
      - '13:00'
      - '13:05'
      - '13:10'
      - '13:15'
      - '13:20'
      - '13:25'
      - '13:30'
      - '13:35'
      - '13:40'
      - '13:45'
      - '13:50'
      - '13:55'
      - '14:00'
      - '14:05'
      - '14:10'
      - '14:15'
      - '14:20'
      - '14:25'
      - '14:30'
      - '14:35'
      - '14:40'
      - '14:45'
      - '14:50'
      - '14:55'
      - '15:00'
      - '15:05'
      - '15:10'
      - '15:15'
      - '15:20'
      - '15:25'
      - '15:30'
      - '15:35'
      - '15:40'
      - '15:45'
      - '15:50'
      - '15:55'
      - '16:00'
      - '16:05'
      - '16:10'
      - '16:15'
      - '16:20'
      - '16:25'
      - '16:30'
      - '16:35'
      - '16:40'
      - '16:45'
      - '16:50'
      - '16:55'
      - '17:00'
      - '17:05'
      - '17:10'
      - '17:15'
      - '17:20'
      - '17:25'
      - '17:30'
      - '17:35'
      - '17:40'
      - '17:45'
      - '17:50'
      - '17:55'
      - '18:00'
      - '18:05'
      - '18:10'
      - '18:15'
      - '18:20'
      - '18:25'
      - '18:30'
      - '18:35'
      - '18:40'
      - '18:45'
      - '18:50'
      - '18:55'
      - '19:00'
      - '19:05'
      - '19:10'
      - '19:15'
      - '19:20'
      - '19:25'
      - '19:30'
      - '19:35'
      - '19:40'
      - '19:45'
      - '19:50'
      - '19:55'
      - '20:00'
      - '20:05'
      - '20:10'
      - '20:15'
      - '20:20'
      - '20:25'
      - '20:30'
      - '20:35'
      - '20:40'
      - '20:45'
      - '20:50'
      - '20:55'
      - '21:00'
      - '21:05'
      - '21:10'
      - '21:15'
      - '21:20'
      - '21:25'
      - '21:30'
      - '21:35'
      - '21:40'
      - '21:45'
      - '21:50'
      - '21:55'
      - '22:00'
      - '22:05'
      - '22:10'
      - '22:15'
      - '22:20'
      - '22:25'
      - '22:30'
      - '22:35'
      - '22:40'
      - '22:45'
      - '22:50'
      - '22:55'
      - '23:00'
      - '23:05'
      - '23:10'
      - '23:15'
      - '23:20'
      - '23:25'
      - '23:30'
      - '23:35'
      - '23:40'
      - '23:45'
      - '23:50'
      - '23:55'
      type: string
      description: |-
        * `07:00` - 07:00
        * `07:05` - 07:05
        * `07:10` - 07:10
        * `07:15` - 07:15
        * `07:20` - 07:20
        * `07:25` - 07:25
        * `07:30` - 07:30
        * `07:35` - 07:35
        * `07:40` - 07:40
        * `07:45` - 07:45
        * `07:50` - 07:50
        * `07:55` - 07:55
        * `08:00` - 08:00
        * `08:05` - 08:05
        * `08:10` - 08:10
        * `08:15` - 08:15
        * `08:20` - 08:20
        * `08:25` - 08:25
        * `08:30` - 08:30
        * `08:35` - 08:35
        * `08:40` - 08:40
        * `08:45` - 08:45
        * `08:50` - 08:50
        * `08:55` - 08:55
        * `09:00` - 09:00
        * `09:05` - 09:05
        * `09:10` - 09:10
        * `09:15` - 09:15
        * `09:20` - 09:20
        * `09:25` - 09:25
        * `09:30` - 09:30
        * `09:35` - 09:35
        * `09:40` - 09:40
        * `09:45` - 09:45
        * `09:50` - 09:50
        * `09:55` - 09:55
        * `10:00` - 10:00
        * `10:05` - 10:05
        * `10:10` - 10:10
        * `10:15` - 10:15
        * `10:20` - 10:20
        * `10:25` - 10:25
        * `10:30` - 10:30
        * `10:35` - 10:35
        * `10:40` - 10:40
        * `10:45` - 10:45
        * `10:50` - 10:50
        * `10:55` - 10:55
        * `11:00` - 11:00
        * `11:05` - 11:05
        * `11:10` - 11:10
        * `11:15` - 11:15
        * `11:20` - 11:20
        * `11:25` - 11:25
        * `11:30` - 11:30
        * `11:35` - 11:35
        * `11:40` - 11:40
        * `11:45` - 11:45
        * `11:50` - 11:50
        * `11:55` - 11:55
        * `12:00` - 12:00
        * `12:05` - 12:05
        * `12:10` - 12:10
        * `12:15` - 12:15
        * `12:20` - 12:20
        * `12:25` - 12:25
        * `12:30` - 12:30
        * `12:35` - 12:35
        * `12:40` - 12:40
        * `12:45` - 12:45
        * `12:50` - 12:50
        * `12:55` - 12:55
        * `13:00` - 13:00
        * `13:05` - 13:05
        * `13:10` - 13:10
        * `13:15` - 13:15
        * `13:20` - 13:20
        * `13:25` - 13:25
        * `13:30` - 13:30
        * `13:35` - 13:35
        * `13:40` - 13:40
        * `13:45` - 13:45
        * `13:50` - 13:50
        * `13:55` - 13:55
        * `14:00` - 14:00
        * `14:05` - 14:05
        * `14:10` - 14:10
        * `14:15` - 14:15
        * `14:20` - 14:20
        * `14:25` - 14:25
        * `14:30` - 14:30
        * `14:35` - 14:35
        * `14:40` - 14:40
        * `14:45` - 14:45
        * `14:50` - 14:50
        * `14:55` - 14:55
        * `15:00` - 15:00
        * `15:05` - 15:05
        * `15:10` - 15:10
        * `15:15` - 15:15
        * `15:20` - 15:20
        * `15:25` - 15:25
        * `15:30` - 15:30
        * `15:35` - 15:35
        * `15:40` - 15:40
        * `15:45` - 15:45
        * `15:50` - 15:50
        * `15:55` - 15:55
        * `16:00` - 16:00
        * `16:05` - 16:05
        * `16:10` - 16:10
        * `16:15` - 16:15
        * `16:20` - 16:20
        * `16:25` - 16:25
        * `16:30` - 16:30
        * `16:35` - 16:35
        * `16:40` - 16:40
        * `16:45` - 16:45
        * `16:50` - 16:50
        * `16:55` - 16:55
        * `17:00` - 17:00
        * `17:05` - 17:05
        * `17:10` - 17:10
        * `17:15` - 17:15
        * `17:20` - 17:20
        * `17:25` - 17:25
        * `17:30` - 17:30
        * `17:35` - 17:35
        * `17:40` - 17:40
        * `17:45` - 17:45
        * `17:50` - 17:50
        * `17:55` - 17:55
        * `18:00` - 18:00
        * `18:05` - 18:05
        * `18:10` - 18:10
        * `18:15` - 18:15
        * `18:20` - 18:20
        * `18:25` - 18:25
        * `18:30` - 18:30
        * `18:35` - 18:35
        * `18:40` - 18:40
        * `18:45` - 18:45
        * `18:50` - 18:50
        * `18:55` - 18:55
        * `19:00` - 19:00
        * `19:05` - 19:05
        * `19:10` - 19:10
        * `19:15` - 19:15
        * `19:20` - 19:20
        * `19:25` - 19:25
        * `19:30` - 19:30
        * `19:35` - 19:35
        * `19:40` - 19:40
        * `19:45` - 19:45
        * `19:50` - 19:50
        * `19:55` - 19:55
        * `20:00` - 20:00
        * `20:05` - 20:05
        * `20:10` - 20:10
        * `20:15` - 20:15
        * `20:20` - 20:20
        * `20:25` - 20:25
        * `20:30` - 20:30
        * `20:35` - 20:35
        * `20:40` - 20:40
        * `20:45` - 20:45
        * `20:50` - 20:50
        * `20:55` - 20:55
        * `21:00` - 21:00
        * `21:05` - 21:05
        * `21:10` - 21:10
        * `21:15` - 21:15
        * `21:20` - 21:20
        * `21:25` - 21:25
        * `21:30` - 21:30
        * `21:35` - 21:35
        * `21:40` - 21:40
        * `21:45` - 21:45
        * `21:50` - 21:50
        * `21:55` - 21:55
        * `22:00` - 22:00
        * `22:05` - 22:05
        * `22:10` - 22:10
        * `22:15` - 22:15
        * `22:20` - 22:20
        * `22:25` - 22:25
        * `22:30` - 22:30
        * `22:35` - 22:35
        * `22:40` - 22:40
        * `22:45` - 22:45
        * `22:50` - 22:50
        * `22:55` - 22:55
        * `23:00` - 23:00
        * `23:05` - 23:05
        * `23:10` - 23:10
        * `23:15` - 23:15
        * `23:20` - 23:20
        * `23:25` - 23:25
        * `23:30` - 23:30
        * `23:35` - 23:35
        * `23:40` - 23:40
        * `23:45` - 23:45
        * `23:50` - 23:50
        * `23:55` - 23:55
    LogoutRequest:
      type: object
      properties:
        refresh_token:
          type: string
          minLength: 1
      required:
      - refresh_token
    Participant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date_start:
          type: string
          format: date-time
          readOnly: true
        date_end:
          type: string
          format: date-time
          nullable: true
        validate:
          type: boolean
        user:
          type: integer
        activity:
          type: integer
      required:
      - activity
      - date_start
      - id
      - user
    Point:
      type: object
      properties:
        points:
          type: integer
      required:
      - points
    ResetPassword:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    ResetPasswordCodeValidateRequestRequest:
      type: object
      properties:
        code:
          type: integer
        email:
          type: string
          format: email
          minLength: 1
      required:
      - code
      - email
    ResetPasswordCodeValidateResponse:
      type: object
      properties:
        detail:
          type: string
        token:
          type: string
      required:
      - detail
      - token
    ResetPasswordRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - password
      - token
    ResetPasswordRequestRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    TokenOutput:
      type: object
      properties:
        refresh:
          type: string
          title: Refresh token
        access:
          type: string
          title: Access token
      required:
      - access
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TypeEnum:
      enum:
      - ADMINISTRATOR
      - STUDENT
      - TEACHER
      type: string
      description: |-
        * `ADMINISTRATOR` - Administrator
        * `STUDENT` - Estudiante
        * `TEACHER` - Maestro
    UserModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Correo Electr칩nico
          maxLength: 254
        avatar:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
      required:
      - avatar
      - email
      - id
      - username
    UserModelRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: Correo Electr칩nico
          maxLength: 254
        type:
          $ref: '#/components/schemas/TypeEnum'
      required:
      - email
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
